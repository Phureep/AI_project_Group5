# -*- coding: utf-8 -*-
"""cnn_AI_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d6kr1ViCnw4MefOXUjno-XeY42RtADPp
"""

import tensorflow
from tensorflow import keras

mnist = keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()

x_train.shape
x_train.dtype

x_valid, x_train = x_train[:5000] / 255.0, x_train[5000:] / 255.0
y_valid, y_train = y_train[:5000], y_train[5000:]

"""# CNN model start from here"""

x_train = x_train.reshape((x_train.shape[0],28,28,1))
x_valid = x_valid.reshape((x_valid.shape[0],28,28,1))
x_test = x_test.reshape((x_test.shape[0],28,28,1))

model_cnn = keras.models.Sequential([
    keras.layers.Conv2D(64, 7,activation='relu',padding="same",input_shape=[28,28,1]),
    keras.layers.MaxPooling2D(2),
    keras.layers.Conv2D(128, 3,activation='relu',padding="same"),
    keras.layers.Conv2D(128, 3,activation='relu',padding="same"),
    keras.layers.MaxPooling2D(2),
    keras.layers.Conv2D(256, 3,activation='relu',padding="same"),
    keras.layers.Conv2D(256, 3,activation='relu',padding="same"),
    keras.layers.MaxPooling2D(2),
    keras.layers.Flatten(),
    keras.layers.Dense(128, activation='relu'),
    keras.layers.Dropout(0.7),
    keras.layers.Dense(64, activation='relu'),
    keras.layers.Dropout(0.7),
    keras.layers.Dense(10, activation='softmax')
])

model_cnn.compile(loss = "sparse_categorical_crossentropy",
              optimizer = "sgd",
              metrics = ["accuracy"])

model_cnn.summary()

history_cnn = model_cnn.fit(x_train, y_train, epochs=30,
                    validation_data=(x_valid, y_valid))

model_cnn.evaluate(x_test, y_test)

import pandas as pd
import matplotlib.pyplot as plt

pd.DataFrame(history_cnn.history).plot(figsize=(8,5))
plt.grid(True)
plt.gca().set_ylim(0,1)
plt.show()

import os
from datetime import datetime

model_save_fpath = "models/my_cnn_model.keras"  
os.makedirs(os.path.dirname(model_save_fpath), exist_ok=True)
model_cnn.save(model_save_fpath)
print(f"Model saved at: {model_save_fpath}")





